name: Foodgram-workflow

on: [push]

jobs:
#  tests:
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Python
#      uses: actions/setup-python@v2
#      with:
#        python-version: 3.9
#
#    - name: Install dependencies
#      run: |
#        # обновление pip
#        python -m pip install --upgrade pip
#        # установка flake8 и его плагинов
#        pip install flake8 pep8-naming flake8-broken-line flake8-return
#        # установка зависимостей
#        pip install -r backend/requirements.txt
#
#    - name: Test with flake8 and django tests
#      run: |
#        cd backend/
#        # запуск проверки проекта по flake8
#        python -m flake8
#        # перейти в папку, содержащую manage.py - <корневая_папка>/<папка_проекта>/manage.py
#        # cd infra_project/
#        # запустить написанные разработчиком тесты
#        # python manage.py test
#
#
#  build_and_push_to_docker_hub:
#    name: Push Docker image to Docker Hub
#    runs-on: ubuntu-latest
#    needs: tests
#    steps:
#
#      - name: Login to docker.io
#        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_ID }} --password-stdin
#      - uses: actions/checkout@master
#      - name: Build django
#        run: |
#          cd backend/
#          docker build -t 1kovalevskiy/foodgram_web:latest -f Dockerfile .
#      - name: Push django to docker.io
#        run: docker push 1kovalevskiy/foodgram_web:latest
#      - name: Build front
#        run: |
#          cd frontend/
#          docker build -t 1kovalevskiy/foodgram_frontend:latest -f Dockerfile .
#      - name: Push front to docker.io
#        run: docker push 1kovalevskiy/foodgram_frontend:latest

  deploy:
    runs-on: ubuntu-latest
#    needs: build_and_push_to_docker_hub
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }} # Если ваш ssh-ключ защищён фразой-паролем
        script: |
          git pull
          sudo docker stop $(sudo docker ps -a -q)
          cd /home/1kovalevskiy/foodgram-project-react/infra
          sudo docker compose up
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!
